{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "AWS CloudFormation Sample Template vpc_multiple_subnets.template: Sample template showing how to create a VPC with multiple subnets. The first subnet is public and contains the load balancer, the second subnet is private and contains an EC2 instance behind the load balancer. **WARNING** This template creates an Amazon EC2 instance. You will be billed for the AWS resources used if you create a stack from this template.",

  "Parameters" : {
      
  "KeyName" : {
      "Description" : "Name of an existing EC2 KeyPair to enable SSH access to the bastion host",
      "Type" : "String",
      "MinLength": "1",
      "MaxLength": "64",
      "AllowedPattern" : "[-_ a-zA-Z0-9]*",
      "ConstraintDescription" : "can contain only alphanumeric characters, spaces, dashes and underscores."
    },
    

     "Vpcnetwork" : {
      "Description" : "Specify the VPC network to cover",
      "Type" : "String",
      "Default" : "10.1.0.0/16"
    },

      "mypublicsubnet1" : {
        "Description" : "Specify the First VPC public subnet to use",
        "Type" : "String",
        "Default" : "10.1.1.0/24"
      },

      "myprivatesubnet1" : {
        "Description" : "Specify the First VPC private subnet to use",
        "Type" : "String",
        "Default" : "10.1.3.0/24"
      }
    },
    
     "Mappings" : {
  
       "AWSNATAMI" : {
         "us-east-1"      : { "64" : "ami-f619c29f" },
         "us-west-1"      : { "64" : "ami-3bcc9e7e" },
         "us-west-2"      : { "64" : "ami-52ff7262" },
         "eu-west-1"      : { "64" : "ami-e5e2d991" },
         "sa-east-1"      : { "64" : "ami-0039e61d" },
         "ap-southeast-1" : { "64" : "ami-02eb9350" },
         "ap-northeast-1" : { "64" : "ami-14d86d15" }
       },

    "AWSInstanceType2Arch" : {
         "t1.micro"    : { "Arch" : "64" },
         "m1.small"    : { "Arch" : "64" },
         "m1.medium"   : { "Arch" : "64" },
         "m1.large"    : { "Arch" : "64" },
         "m1.xlarge"   : { "Arch" : "64" },
         "m2.xlarge"   : { "Arch" : "64" },
         "m2.2xlarge"  : { "Arch" : "64" },
         "m2.4xlarge"  : { "Arch" : "64" },
         "c1.medium"   : { "Arch" : "64" },
         "c1.xlarge"   : { "Arch" : "64" }
       },

       "AWSRegionArch2AMINAT" : {
         "us-east-1"      : { "64" : "ami-f619c29f" },
         "us-west-1"      : { "64" : "ami-3bcc9e7e" },
         "us-west-2"      : { "64" : "ami-52ff7262" },
         "eu-west-1"      : { "64" : "ami-e5e2d991" },
         "sa-east-1"      : { "64" : "ami-0039e61d" },
         "ap-southeast-1" : { "64" : "ami-02eb9350" },
         "ap-northeast-1" : { "64" : "ami-14d86d15" }
       }    

     },
    
    "Resources" : {

      "myVPC" : {
        "Type" : "AWS::EC2::VPC",
        "Properties" : {
          "CidrBlock" : { "Ref" : "Vpcnetwork" },
          "Tags" : [
            {"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"} },
            {"Key" : "Network", "Value" : "Public" }
          ]
        }
      },
      "S3Bucket" : {
      "Type" : "AWS::S3::Bucket",
      "Properties" : {
         "AccessControl" : "Private",
         "BucketName" : "image-bucket-654321"}
         },

      "PublicSubnet1" : {
        "Type" : "AWS::EC2::Subnet",
        "Properties" : {
          "VpcId" : { "Ref" : "myVPC" },
          "AvailabilityZone" : "ap-northeast-1c",
          "CidrBlock" : { "Ref" : "mypublicsubnet1" },
          "Tags" : [
            {"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"} },
            {"Key" : "Network", "Value" : "Public" }
          ]
        }
      },

    

      "PrivateSubnet1" : {
        "Type" : "AWS::EC2::Subnet",
        "Properties" : {
          "VpcId" : { "Ref" : "myVPC" },
          "AvailabilityZone" : "ap-northeast-1c",
          "CidrBlock" : { "Ref" : "myprivatesubnet1" },
          "Tags" : [
            {"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"} },
            {"Key" : "Network", "Value" : "Private" }
          ]
        }
      },

       
  
    "NATIPAddress" : {
      "Type" : "AWS::EC2::EIP",
      "Properties" : {
        "Domain" : "vpc",
        "InstanceId" : { "Ref" : "NATDevice" }
      },
   
     "DependsOn" : "AttachGateway"
    
    },
   
    "NATDevice" : {
      "Type" : "AWS::EC2::Instance",
      "Properties" : {
        "InstanceType" : "m1.small",
        "KeyName"  : { "Ref" : "KeyName" },
        "SubnetId" : { "Ref" : "PublicSubnet1" },
        "Tags": [
        { "Key" : "Name",  "Value": { 
        "Fn::Join" : [ "-", [ "NAT", { "Ref" : "AWS::StackName" } ] ] } }
        ],
        "SourceDestCheck" : "false",
        "ImageId" : { "Fn::FindInMap" : [ "AWSNATAMI", { "Ref" : "AWS::Region" }, "64" ]},
        "SecurityGroupIds" : [{ "Ref" : "NATSecurityGroup" }]
      }
    },  
    
    "NATSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Enable internal access to the NAT device",
        "VpcId" : { "Ref" : "myVPC" },
        "SecurityGroupIngress" : [

           { "IpProtocol" : "tcp", "FromPort" : "22",  "ToPort" : "22",  "CidrIp" : "0.0.0.0/0"} ],
        "SecurityGroupEgress" : [
           { "IpProtocol" : "tcp", "FromPort" : "80",  "ToPort" : "80",  "CidrIp" : "0.0.0.0/0"} ,
           { "IpProtocol" : "tcp", "FromPort" : "443", "ToPort" : "443", "CidrIp" : "0.0.0.0/0"},
           { "IpProtocol" : "tcp", "FromPort" : "22",  "ToPort" : "22",  "CidrIp" : "0.0.0.0/0"}]
      }
    }, 
    "BatchProcessingSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Enable internal access to the NAT device",
        "VpcId" : { "Ref" : "myVPC" },
        "SecurityGroupIngress" : [
           { "IpProtocol" : "tcp", "FromPort" : "22",  "ToPort" : "22",  "CidrIp" : "0.0.0.0/0"} ],
        "SecurityGroupEgress" : [
           { "IpProtocol" : "tcp", "FromPort" : "80",  "ToPort" : "80",  "CidrIp" : "0.0.0.0/0"} ,
           { "IpProtocol" : "tcp", "FromPort" : "443", "ToPort" : "443", "CidrIp" : "0.0.0.0/0"},
           { "IpProtocol" : "tcp", "FromPort" : "22",  "ToPort" : "22",  "CidrIp" : "0.0.0.0/0"} ]
      }
    }, 
    
    
    
     "InternetGateway" : {
       "Type" : "AWS::EC2::InternetGateway",
       "Properties" : {
         "Tags" : [
           {"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"} },
           {"Key" : "Network", "Value" : "Public" }
         ]
       }
     },

     "AttachGateway" : {
        "Type" : "AWS::EC2::VPCGatewayAttachment",
        "Properties" : {
          "VpcId" : { "Ref" : "myVPC" },
          "InternetGatewayId" : { "Ref" : "InternetGateway" }
        }
     },

     "PublicRouteTable" : {
       "Type" : "AWS::EC2::RouteTable",
       "Properties" : {
         "VpcId" : {"Ref" : "myVPC"},
         "Tags" : [
           {"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"} },
           {"Key" : "Network", "Value" : "Public" }
         ]
       }
     },

     "PublicRoute" : {
       "Type" : "AWS::EC2::Route",
       "Properties" : {
         "RouteTableId" : { "Ref" : "PublicRouteTable" },
         "DestinationCidrBlock" : "0.0.0.0/0",
         "GatewayId" : { "Ref" : "InternetGateway" }
       }
     },

     "PublicSubnetRouteTableAssociation1" : {
       "Type" : "AWS::EC2::SubnetRouteTableAssociation",
       "Properties" : {
         "SubnetId" : { "Ref" : "PublicSubnet1" },
         "RouteTableId" : { "Ref" : "PublicRouteTable" }
       }
     },

      
     "PublicNetworkAcl" : {
       "Type" : "AWS::EC2::NetworkAcl",
       "Properties" : {
         "VpcId" : {"Ref" : "myVPC"},
         "Tags" : [
           {"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"} },
           {"Key" : "Network", "Value" : "Public" }
         ]
       }
     },

     "InboundHTTPPublicNetworkAclEntry" : {
       "Type" : "AWS::EC2::NetworkAclEntry",
       "Properties" : {
         "NetworkAclId" : {"Ref" : "PublicNetworkAcl"},
         "RuleNumber" : "100",
         "Protocol" : "6",
         "RuleAction" : "allow",
         "Egress" : "false",
         "CidrBlock" : "0.0.0.0/0",
         "PortRange" : {"From" : "0", "To" : "65535"}
       }
     },

     "OutboundHTTPPublicNetworkAclEntry" : {
       "Type" : "AWS::EC2::NetworkAclEntry",
       "Properties" : {
         "NetworkAclId" : {"Ref" : "PublicNetworkAcl"},
         "RuleNumber" : "100",
         "Protocol" : "6",
         "RuleAction" : "allow",
         "Egress" : "true",
         "CidrBlock" : "0.0.0.0/0",
         "PortRange" : {"From" : "0", "To" : "65535"}
       }
     },

     "PublicSubnetNetworkAclAssociation1" : {
       "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
       "Properties" : {
         "SubnetId" : { "Ref" : "PublicSubnet1" },
         "NetworkAclId" : { "Ref" : "PublicNetworkAcl" }
       }
     },

     "PrivateRouteTable" : {
       "Type" : "AWS::EC2::RouteTable",
       "Properties" : {
         "VpcId" : {"Ref" : "myVPC"},
         "Tags" : [
           {"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"} },
           {"Key" : "Network", "Value" : "Private" }
         ]
       }
     },

     "PrivateSubnetRouteTableAssociation1" : {
       "Type" : "AWS::EC2::SubnetRouteTableAssociation",
       "Properties" : {
         "SubnetId" : { "Ref" : "PrivateSubnet1" },
         "RouteTableId" : { "Ref" : "PrivateRouteTable" }
       }
     },
   
      "PrivateRoute" : {
          "Type" : "AWS::EC2::Route",
          "Properties" : {
             "RouteTableId" : { "Ref" : "PrivateRouteTable" },
             "DestinationCidrBlock" : "0.0.0.0/0",
             "InstanceId" : { "Ref" : "NATDevice" }
          }
       },
   
    "PrivateNetworkAcl" : {
       "Type" : "AWS::EC2::NetworkAcl",
       "Properties" : {
         "VpcId" : {"Ref" : "myVPC"},
         "Tags" : [
           {"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"} },
           {"Key" : "Network", "Value" : "Private" }
         ]
       }
     },

     "InboundPrivateNetworkAclEntry" : {
       "Type" : "AWS::EC2::NetworkAclEntry",
       "Properties" : {
         "NetworkAclId" : {"Ref" : "PrivateNetworkAcl"},
         "RuleNumber" : "100",
         "Protocol" : "6",
         "RuleAction" : "allow",
         "Egress" : "false",
         "CidrBlock" : "0.0.0.0/0",
         "PortRange" : {"From" : "0", "To" : "65535"}
       }
     },

     "OutBoundPrivateNetworkAclEntry" : {
       "Type" : "AWS::EC2::NetworkAclEntry",
       "Properties" : {
         "NetworkAclId" : {"Ref" : "PrivateNetworkAcl"},
         "RuleNumber" : "100",
         "Protocol" : "6",
         "RuleAction" : "allow",
         "Egress" : "true",
         "CidrBlock" : "0.0.0.0/0",
         "PortRange" : {"From" : "0", "To" : "65535"}
       }
     },

     "PrivateSubnetNetworkAclAssociation1" : {
       "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
       "Properties" : {
         "SubnetId" : { "Ref" : "PrivateSubnet1" },
         "NetworkAclId" : { "Ref" : "PrivateNetworkAcl" }
       }
     },
     
   "BatchProcessing" : {
     "Type" : "AWS::EC2::SecurityGroup",
     "Properties" : {
       "GroupDescription" : "Batch Processing",
       "VpcId" : {"Ref" : "myVPC"},
       "SecurityGroupIngress" : [
            
         { "IpProtocol" : "tcp", 
            "FromPort" : "22", 
            "ToPort" : "22", 
            "SourceSecurityGroupId" : { "Ref" : "NATSecurityGroup" } 
         } 
          ]
        }
    },
    "BatchProcessing": {
         "Type": "AWS::IAM::Role",
         "Properties": {
            "AssumeRolePolicyDocument": {
               "Version" : "2012-10-17",
               "Statement": [ {
                  "Effect": "Allow",
                  "Principal": {
                     "Service": [ "ec2.amazonaws.com" ]
                  },
                  "Action": [ "sts:AssumeRole" ]
               } ]
            },
            "Path": "/",
            "Policies": [ {
               "PolicyName": "root",
               "PolicyDocument": {
                  "Version" : "2012-10-17",
                  "Statement": [ {
                     "Effect": "Allow",
                     "Action": "s3:*",
                     "Resource": "*"
                  } ,
                   {
                     "Effect": "Allow",
                     "Action": "sqs:*",
                     "Resource": "*"
                  } ]
               }
               } ]
            }
      },
      "RootInstanceProfile": {
         "Type": "AWS::IAM::InstanceProfile",
         "Properties": {
            "Path": "/",
            "Roles": [ {
               "Ref": "BatchProcessing"
            } ]
         }
      }
    },
    
       
        "Outputs" : {
        "VpcId" : {
          "Value" : {"Ref" : "myVPC"},
          "Description" : "VPC ID of newly created VPC"
        },
        "S3BucketSecureURL" : {
      "Value" : { "Fn::Join" : [
         "", [ "https://", { "Fn::GetAtt" : [ "S3Bucket", "DomainName" ] } ]
      ] },
      "Description" : "Name of S3 bucket to hold website content"
   }
     }

}   
